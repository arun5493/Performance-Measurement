a.out:
(__TEXT,__text) section
_rdtsc:
0000000100000de0	pushq	%rbp
0000000100000de1	movq	%rsp, %rbp
0000000100000de4	rdtsc
0000000100000de6	movl	%eax, -0x4(%rbp)
0000000100000de9	movl	%edx, -0x8(%rbp)
0000000100000dec	movl	-0x8(%rbp), %eax
0000000100000def	movl	%eax, %ecx
0000000100000df1	shlq	$0x20, %rcx
0000000100000df5	movl	-0x4(%rbp), %eax
0000000100000df8	movl	%eax, %esi
0000000100000dfa	orq	%rsi, %rcx
0000000100000dfd	movq	%rcx, %rax
0000000100000e00	popq	%rbp
0000000100000e01	retq
0000000100000e02	nopw	%cs:(%rax,%rax)
_main:
0000000100000e10	pushq	%rbp
0000000100000e11	movq	%rsp, %rbp
0000000100000e14	subq	$0x60, %rsp
0000000100000e18	leaq	0x161(%rip), %rdi       ## literal pool for: "loop_overhead.txt"
0000000100000e1f	leaq	0x16c(%rip), %rsi       ## literal pool for: "a"
0000000100000e26	movl	$0x0, -0x4(%rbp)
0000000100000e2d	movl	$0x1, -0x8(%rbp)
0000000100000e34	movl	$0x1, -0x18(%rbp)
0000000100000e3b	movl	$0x400, -0x3c(%rbp)     ## imm = 0x400
0000000100000e42	movl	$0x200000, -0x40(%rbp)  ## imm = 0x200000
0000000100000e49	callq	0x100000f30             ## symbol stub for: _fopen
0000000100000e4e	movq	%rax, -0x48(%rbp)
0000000100000e52	movl	-0x3c(%rbp), %ecx
0000000100000e55	movl	%ecx, -0x2c(%rbp)
0000000100000e58	movl	-0x2c(%rbp), %eax
0000000100000e5b	cmpl	-0x40(%rbp), %eax
0000000100000e5e	jg	0x100000f27
0000000100000e64	movslq	-0x2c(%rbp), %rax
0000000100000e68	shlq	$0x2, %rax
0000000100000e6c	movq	%rax, %rdi
0000000100000e6f	callq	0x100000f36             ## symbol stub for: _malloc
0000000100000e74	xorl	%esi, %esi
0000000100000e76	movq	%rax, -0x38(%rbp)
0000000100000e7a	movq	-0x38(%rbp), %rax
0000000100000e7e	movslq	-0x2c(%rbp), %rdi
0000000100000e82	shlq	$0x2, %rdi
0000000100000e86	movq	%rdi, -0x50(%rbp)
0000000100000e8a	movq	%rax, %rdi
0000000100000e8d	movq	-0x50(%rbp), %rdx
0000000100000e91	callq	0x100000f3c             ## symbol stub for: _memset
0000000100000e96	movl	-0x18(%rbp), %esi
0000000100000e99	movl	%esi, %eax
0000000100000e9b	xchgq	%rbx, %rsi
0000000100000e9e	cpuid
0000000100000ea0	xchgq	%rbx, %rsi
0000000100000ea3	movl	%eax, -0x8(%rbp)
0000000100000ea6	movl	%esi, -0xc(%rbp)
0000000100000ea9	movl	%ecx, -0x10(%rbp)
0000000100000eac	movl	%edx, -0x14(%rbp)
0000000100000eaf	callq	_rdtsc
0000000100000eb4	movl	$0x1, %esi
0000000100000eb9	movq	%rax, -0x20(%rbp)
0000000100000ebd	movq	-0x38(%rbp), %rax
0000000100000ec1	movslq	-0x2c(%rbp), %rdi
0000000100000ec5	shlq	$0x2, %rdi
0000000100000ec9	movq	%rdi, -0x58(%rbp)
0000000100000ecd	movq	%rax, %rdi
0000000100000ed0	movq	-0x58(%rbp), %rdx
0000000100000ed4	callq	0x100000f3c             ## symbol stub for: _memset
0000000100000ed9	movl	-0x18(%rbp), %ecx
0000000100000edc	movl	%ecx, %eax
0000000100000ede	xchgq	%rbx, %rsi
0000000100000ee1	cpuid
0000000100000ee3	xchgq	%rbx, %rsi
0000000100000ee6	movl	%eax, -0x8(%rbp)
0000000100000ee9	movl	%esi, -0xc(%rbp)
0000000100000eec	movl	%ecx, -0x10(%rbp)
0000000100000eef	movl	%edx, -0x14(%rbp)
0000000100000ef2	callq	_rdtsc
0000000100000ef7	leaq	0x96(%rip), %rdi        ## literal pool for: "arr memset time = %d\n"
0000000100000efe	movq	%rax, -0x28(%rbp)
0000000100000f02	movq	-0x28(%rbp), %rax
0000000100000f06	subq	-0x20(%rbp), %rax
0000000100000f0a	movq	%rax, %rsi
0000000100000f0d	movb	$0x0, %al
0000000100000f0f	callq	0x100000f42             ## symbol stub for: _printf
0000000100000f14	movl	%eax, -0x5c(%rbp)
0000000100000f17	movl	-0x2c(%rbp), %eax
0000000100000f1a	addl	$0x400, %eax            ## imm = 0x400
0000000100000f1f	movl	%eax, -0x2c(%rbp)
0000000100000f22	jmp	0x100000e58
0000000100000f27	movl	-0x4(%rbp), %eax
0000000100000f2a	addq	$0x60, %rsp
0000000100000f2e	popq	%rbp
0000000100000f2f	retq
